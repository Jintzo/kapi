// load constants
var constants = require('./../conf/constants')

module.exports = {

  /**
   * generate a new error callback object
   * @param  {String} errorText    the text that should be displayed as error (generated by the error factory)
   * @param  {String} responseType the type of response (from constants)
   * @return {Object}              callback object
   */
  errorCallback: function (errorText, responseType) {

    // generic callback object
    let callbackObject = {
      errors: [{
        title: constants.responses.general,
        detail: constants.errors.unknown.text
      }]
    }

    // set errorText and responseType apppropriately (if defined)
    if (typeof errorText !== 'undefined' && errorText !== null && errorText !== '') {
      callbackObject.errors[0].detail = errorText
    }

    if (typeof responseType !== 'undefined' && responseType !== null && responseType !== '') {
      callbackObject.errors[0].title = responseType
    }

    // return callback object
    return callbackObject
  },

  /**
   * generate a new documentation callback object
   * @param  {Object} documentationObject parameter documentation
   * @return {Object}                     documentation callback
   */
  documentationCallback: function (documentationObject) {

    // generic callback object
    let callbackObject = {
      data: {
        type: 'documentation',
        id: 1,
        attributes: null
      }
    }

    // set attributes appropriately
    documentationObject = (typeof documentationObject === 'object') ? documentationObject : null
    callbackObject.data.attributes = documentationObject

    // return callback object
    return callbackObject
  },

  single: function (dataObject, responseType) {

    // generic callback object
    let callbackObject = {
      data: {
        type: constants.responses.general,
        id: 1,
        attributes: null
      }
    }

    // set attributes appropriately
    callbackObject.data.attributes = (typeof dataObject === 'object') ? dataObject : callbackObject.data.attributes

    // set response type appropriately
    callbackObject.data.type = (typeof responseType === 'string') ? responseType : callbackObject.data.type

    // return callback object
    return callbackObject
  }
}
