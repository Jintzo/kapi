// load module dependencies
const constants = require('./../conf/constants')

module.exports = {

  /**
   * generate a new error callback object
   * @param  {Object} error        the text or error object that should be returnes as error (usually generated by the error factory)
   * @param  {String} responseType the type of response (from constants)
   * @return {Object}              the callback object
   */
  error (error) {
    // load error callback scheme
    let scheme = constants.callbacks.scheme_error

    // envelop error object into array if it is not an array yet
    if (!Array.isArray(error)) {
      error = [error]
    }

    // get error array length
    const errorLength = error.length

    // add default error and return if no errors were passed
    if (errorLength === 0 || (errorLength === 1 && error[0] === undefined)) {
      scheme.errors.push({ 'detail': constants.errors.unknown.text })
      return scheme
    }

    // add all passed errors
    scheme.errors = error

    // return callback object
    return scheme
  }
}
